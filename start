#!/usr/bin/env bash

POOL=${POOL:-default}
WORKERS=2
LIBVIRT_DEFAULT_URI="qemu:///system"

IMAGE=xenial-server-cloudimg-amd64-disk1.img
BASE_URL=https://cloud-images.ubuntu.com/xenial/current

while [[ $# > 0 ]] ; do
    case $1 in
        -c|--connection)
            export LIBVIRT_DEFAULT_URI="$2"
            shift
            ;;
        -w|--workers)
            WORKERS="$2"
            shift
            ;;
    esac
    shift
done

fatal() {
    echo "$1; quitting"
    exit 1
}

info() {
    echo "[I] $1"
}

info "Connection to libvirt: $LIBVIRT_DEFAULT_URI"

SMARTBOX_PATH=$(realpath ${1:-..})
MANIFESTS_PATH=$(realpath $SMARTBOX_PATH/cluster/manifests)

if [ ! -f tmp/$IMAGE ]; then
    wget $BASE_URL/$IMAGE -O tmp/$IMAGE
fi

machine_ip() {
    echo "172.17.4.$(($1 + 100))"
}

network_cidr() {
    echo "10.244.0.0/16"
}

token() {
    echo "e6ac8e.43f6980db7a3d88d"
}

build_cloudinit() {
    WORKDIR=$(mktemp -d cloudinit-$1-XXXXXXXX)

    cat > $WORKDIR/meta-data <<EOF
instance-id: $1
hostname: $1
local-hostname: $1
EOF

    cat > $WORKDIR/user-data <<EOF
#cloud-config
password: linux
runcmd:
  - apt-get update && apt-get install -y apt-transport-https docker.io
  - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
  - echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list
  - apt-get update
  - apt-get install -y kubelet kubeadm
EOF

    if [ $1 == "master" ]; then
      cat >> $WORKDIR/user-data <<EOF
  - kubeadm init --apiserver-advertise-address $(machine_ip 0) --skip-preflight-checks --pod-network-cidr $(network_cidr) --token $(token)
EOF
    fi

    genisoimage -output $WORKDIR/cloudinit-$1.iso -volid cidata -joliet -rock $WORKDIR/{user,meta}-data &> /dev/null

    virsh vol-create-as --pool $POOL --name cloudinit-$1.iso --capacity 5M --format raw &> /dev/null
    virsh vol-upload --pool $POOL --vol cloudinit-$1.iso --file $WORKDIR/cloudinit-$1.iso &> /dev/null

    rm -rf $WORKDIR
}

build_vm() {
    build_cloudinit $1
    virsh vol-create-as --pool $POOL --name $1.img --capacity 10G --format qcow2 --prealloc-metadata &> /dev/null
    virsh vol-upload --pool $POOL --vol $1.img --file tmp/$IMAGE &> /dev/null
    virt-install --name $1 \
                 --vcpus 2 \
                 --cpu host \
                 --ram 2048 \
                 --autostart \
                 --memballoon virtio \
                 --boot hd \
                 --os-type linux \
                 --os-variant generic \
                 --network network=default \
                 --graphics none \
                 --disk vol=$POOL/$1.img,format=qcow2,bus=virtio,cache=writeback \
                 --disk vol=$POOL/cloudinit-$1.iso,bus=virtio &> /dev/null & &> /dev/null
    info "Machine $1 created"
}

build_vm "master"
for i in $(seq 1 $WORKERS); do
    build_vm "worker$i"
done
